from profuturo.common import define_extraction, register_time
from profuturo.database import get_postgres_pool, configure_postgres_spark, configure_bigquery_spark, configure_buc_spark
from profuturo.extraction import _write_spark_dataframe, extract_terms, extract_dataset_spark, _get_spark_session, read_table_insert_temp_view
from pyspark.sql.types import StructType, StringType
from pyspark.sql.functions import udf, concat, col, current_date
import uuid
import sys

spark = _get_spark_session()

query = """
SELECT 
count(1) 
FROM (
SELECT
ROW_NUMBER() over (partition by TO_NUMBER(REGEXP_REPLACE(TO_CHAR(C.NUMERO), '[^0-9]', '')) order by C.NUMERO) AS id,
TO_NUMBER(REGEXP_REPLACE(TO_CHAR(C.NUMERO), '[^0-9]', '')) AS FTN_CUENTA,
PF.NOMBRE AS FTC_NOMBRE,
PF.APELLIDOPATERNO AS FTC_AP_PATERNO,
PF.APELIDOMATERNO AS FTC_AP_MATERNO,
DI.CALLE AS FTC_CALLE,
DI.NUMEROEXTERIOR AS FTC_NUMERO,
ASE.NOMBRE AS FTC_COLONIA,
CD.NOMBRE AS FTC_DELEGACION,
CAST(CP.CODIGOPOSTAL AS INTEGER) AS FTN_CODIGO_POSTAL,
E.NOMBRE AS FTC_ENTIDAD_FEDERATIVA,
NSS.VALOR_IDENTIFICADOR AS FTC_NSS,
CURP.VALOR_IDENTIFICADOR AS FTC_CURP,
RFC.VALOR_IDENTIFICADOR AS FTC_RFC
FROM CONTRATO C
INNER JOIN PERSONA_CONT_ROL PCR ON C.IDCONTRATO = PCR.IDCONTRATO
INNER JOIN PERSONA_FISICA PF ON PCR.IDPERSONA = PF.IDPERSONA
INNER JOIN DOMICILIO D ON PF.IDPERSONA = D.IDPERSONA
INNER JOIN DIRECCION DI ON D.IDDIRECCION = DI.IDDIRECCION
LEFT JOIN CODIGO_POSTAL CP ON DI.IDCODIGOPOSTAL = CP.IDCODIGOPOSTAL
LEFT JOIN ESTADO E ON CP.IDESTADO = E.IDESTADO
LEFT JOIN MUNICIPIO M ON CP.IDMUNICIPIO = M.IDMUNICIPIO
LEFT JOIN CIUDAD CD ON CP.IDCIUDAD = CD.IDCIUDAD
LEFT JOIN ASENTAMIENTO ASE ON DI.IDASENTAMIENTO = ASE.IDASENTAMIENTO
LEFT JOIN IDENTIFICADOR NSS ON PF.IDPERSONA = NSS.IDPERSONA AND NSS.IDTIPOIDENTIFICADOR = 3 
AND NSS.VALIDO = 1 AND NSS.ACTIVO = 1
LEFT JOIN IDENTIFICADOR CURP ON PF.IDPERSONA = CURP.IDPERSONA AND CURP.IDTIPOIDENTIFICADOR = 2 
AND CURP.VALIDO = 1 AND CURP.ACTIVO = 1
LEFT JOIN IDENTIFICADOR RFC ON PF.IDPERSONA = RFC.IDPERSONA AND RFC.IDTIPOIDENTIFICADOR = 1 
AND RFC.VALIDO = 1 AND RFC.ACTIVO = 1
WHERE PCR.IDROL = 787 -- Rol cliente
AND C.IDLINEANEGOCIO = 763 -- Linea de negocio
AND D.IDTIPODOM = 818 -- Tipo de domicilio Particular
-- AND D.IDSTATUSDOM = 761 ACTIVO
-- AND D.PREFERENTE = 1 Domicilio preferente
) where id = 1
"""
read_table_insert_temp_view(configure_buc_spark, query, "clientes")
spark.sql("select * from clientes").show()

